name: BhinnekaBot (TON Premium)

on:
  schedule:
    - cron: "0 */6 * * *"      # UTC, tiap 6 jam
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: bhinnekabot
  cancel-in-progress: true

jobs:
  run:
    runs-on: ubuntu-latest
    timeout-minutes: 350

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Run ke-1: artifact mungkin belum ada -> tidak masalah
      - name: Restore DB artifact (if exists)
        uses: actions/download-artifact@v4
        with:
          name: bhinneka-db
          path: .
        continue-on-error: true

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Show files (debug)
        run: ls -al

      - name: Run bot (auto-stop after 5h45m)
        env:
          BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
          TON_DEST_ADDRESS: ${{ secrets.TON_DEST_ADDRESS }}
          TONCENTER_API: ${{ secrets.TONCENTER_API }}
          TONCENTER_API_KEY: ${{ secrets.TONCENTER_API_KEY }}
          PREMIUM_PRICE_TON: ${{ secrets.PREMIUM_PRICE_TON }}
          PREMIUM_DAYS: ${{ secrets.PREMIUM_DAYS }}
          PYTHONUNBUFFERED: "1"
        run: |
          timeout 5h45m python -u bhinnekabot.py || true

      # Pastikan DB ada supaya upload sukses di run pertama.
      - name: Ensure DB file exists (first run safety)
        shell: bash
        run: |
          python - <<'PY'
import os, sqlite3
db = "bhinneka.db"
if not os.path.exists(db):
    con = sqlite3.connect(db)
    con.execute("CREATE TABLE IF NOT EXISTS _init(id INTEGER)")
    con.commit()
    con.close()
print("DB ready:", os.path.exists(db))
PY

      - name: Upload DB artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: bhinneka-db
          path: bhinneka.db
          retention-days: 14
